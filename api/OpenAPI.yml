openapi: '3.0.2'
info:
  title: AIFEX OpenAPI
  version: '0.10.11'
servers:
  - url: http://localhost/api
paths:
  /ping:
    get:
      responses:
        '200':
          description: The server is alive
          content:
            text/plain:
              schema:
                type: string
                example: alive
  /signup:
    description: create a new account
    post:
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                email:
                  type: string
                password:
                  type: string
      responses:
        '200':
          description: Account is created
          content:
            text/plain:
              schema:
                type: string
                example: AccountCreated
        '403':
          description: Account cannot be created (forbidden UserName)
          content:
            text/plain:
              schema:
                type: string
                example: UserNameAlreadyTaken
  /signin:
    description: signin and get a bearer token (JWT)
    post:
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
      responses:
        '200':
          description: Returns JWT Token
          content:
            application/json:
              schema:
                type: object
                properties:
                  bearerToken:
                    type: string
        '403':
          description: Cannot sign (wrong username/password)
          content:
            text/plain:
              schema:
                type: string
                example: Unauthorized
  /account:
    get:
      responses:
        '200':
          description: Account
          content:
            application/json:
              schema:
                type: object
                properties:
                  username:
                    type: string
                  authorizationSet:
                    type: array
                    items:
                      type: object
                      properties:
                        key:
                          type: string
                        kind:
                          type: string
                          enum: [WebSite, Model, Session]
        '403':
          description: Unauthorized
          content:
            text/plain:
              schema:
                type: string
                example: Unauthorized
      security:
        - bearerAuth: []
  /websites:
    post:
      description: add a new WebSite
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                url:
                  type: string
                mappingList:
                  type: array
                  items:
                    type: object
                    properties:
                      match:
                        type: object
                        properties:
                          event:
                            type: string
                          css:
                            type: string
                          xpath:
                            type: string
                          code:
                            type: string
                          key:
                            type: string
                      output:
                        type: object
                        properties:
                          prefix:
                            type: string
                          suffix:
                            type: string
                      context:
                        type: object
                        properties:
                          url:
                            type: string
                          css:
                            type: string
                          xpath:
                            type: string
                      description:
                        type: string
      responses:
        '200':
          description: The WebSite id
        '403':
          description: Unauthorized
          content:
            text/plain:
              schema:
                type: string
                example: Unauthorized
      security:
        - bearerAuth: []
  /websites/{webSiteId}:
    get:
      description: returns WebSite 
      parameters:
        - in: path
          name: webSiteId
          schema:
            type: string
          required: true
          description: ID of the WebSite to get
      responses:
        '200':
          description: Returns WebSite
          content:
            application/json:
              schema:
                type: object
                properties:
                  name:
                    type: string
                  url:
                    type: string
                  mappingList:
                    type: array
                    items:
                      type: object
                      properties:
                        match:
                          type: object
                          properties:
                            event:
                              type: string
                            css:
                              type: string
                            xpath:
                              type: string
                            code:
                              type: string
                            key:
                              type: string
                        output:
                          type: object
                          properties:
                            prefix:
                              type: string
                            suffix:
                              type: string
                        context:
                          type: object
                          properties:
                            url:
                              type: string
                            css:
                              type: string
                            xpath:
                              type: string
                        description:
                          type: string
        '403':
          description: Unauthorized
          content:
            text/plain:
              schema:
                type: string
                example: Unauthorized
      security:
        - bearerAuth: []
  /sessions:
    post:
      description: add a new session
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                webSiteId:
                  type: string
                baseURL:
                  type: string
                name:
                  type: string
                overlayType:
                  type: string
                  enum: [shadow, bluesky, rainbow]
      responses:
        '200':
          description: The WebSite ids
          content:
            text/plain:
              schema:
                type: string
                example: SessionAdded
        '403':
          description: Unauthorized
          content:
            text/plain:
              schema:
                type: string
                example: Unauthorized
      security:
        - bearerAuth: []        
  /sessions/{sessionId}:
    get:
      description: returns Session 
      parameters:
        - in: path
          name: sessionId
          schema:
            type: string
          required: true
          description: Id of the Session to get
      responses:
        '200':
          description: Returns Session
      security:
        - bearerAuth: []
  /sessions/{sessionId}/explorations:
    post:
      description: add a new /explorations
      parameters:
        - in: path
          name: sessionId
          schema:
            type: string
          required: true
          description: Id of the session
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                testerName:
                  type: string
                interactionList:
                  type: array
                  items:
                    type: object
                    properties:
                      concreteType:
                        type: string
                        enum: [Action, Comment, Answer]
                      kind:
                        type: string
                      value: 
                        type: string
                      date:
                        type: string
                startDate:
                  type: string
                stopDate:
                  type: string
      responses:
        '200':
          description: The number of exploration in the session
        '400':
          description: Invalid parameter
        '403':
          description: Unauthorized
          content:
            text/plain:
              schema:
                type: string
                example: Unauthorized
      security:
        - bearerAuth: []

          
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT   
      