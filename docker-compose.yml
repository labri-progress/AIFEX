version: "3.3"
services:

  website:
    build:
      context: website/
      dockerfile: ./Dockerfile.prod
    environment:
      - NODE_ENV=${NODE_ENV}
    depends_on:
      - "mongo"
    restart: always
    
  session:
    build:
      context: session/
      dockerfile: ./Dockerfile.prod
    environment:
      - NODE_ENV=${NODE_ENV}
    depends_on:
      - "mongo"
      - "website"
    restart: always
    volumes:
      - screenshot:/app/screenshot
      - video:/app/video

  model:
    build:
      context: model/
      dockerfile: ./Dockerfile.prod
    environment:
      - NODE_ENV=${NODE_ENV}
    depends_on:
      - "mongo"
      - "session"
    restart: always

  account:
    build:
      context: account/
      dockerfile: ./Dockerfile.prod
    environment:
      - NODE_ENV=${NODE_ENV}
      - TOKEN_SECRET=${TOKEN_SECRET}
    depends_on:
      - "mongo"
    restart: always

  evaluator:
    build:
      context: evaluator/
      dockerfile: ./Dockerfile.prod
    environment:
      - NODE_ENV=${NODE_ENV}
    depends_on:
      - "mongo"
      - "session"
    restart: always

  api:
    build:
      context: api/
      dockerfile: ./Dockerfile.prod
    environment:
      - NODE_ENV=${NODE_ENV}
      - TOKEN_SECRET=${TOKEN_SECRET}
      - PLUGIN_INFO=${PLUGIN_INFO}
    depends_on:
      - "account"
      - "website"
      - "session"
      - "model"
    restart: always

  dashboard:
    build:
      context: dashboard/
      dockerfile: ./Dockerfile.prod
    environment:
      - NODE_ENV=${NODE_ENV}
      - PROTOCOL=${PROTOCOL}
      - HOST_ADDR=${HOST_ADDR}
      - PLUGIN_INFO=${PLUGIN_INFO}
      - TOKEN_SECRET=${TOKEN_SECRET}
    restart: always
    volumes:
      - screenshot:/app/public/screenshot
      - video:/app/public/video

  reverseproxy:
    build:
      context: reverseproxy/
      dockerfile: ./Dockerfile.dev
    depends_on:
      - "model"
      - "website"
      - "session"
      - "dashboard"
    ports:
      - 80:80
   
      
  rabbitmq:
    image: rabbitmq:3.8.5
    restart: always
    
  mongo:
    container_name: mongo
    image: mongo
    restart: always
    volumes:
      - db-data:/data/db
    command: --quiet --logpath /data/db/mongod.log
    ports:
      - 27017:27017
          
volumes:
  screenshot:
  video:
  db-data:
