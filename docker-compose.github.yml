version: "3.3"
services:

  website:
    build:
      context: website/
      dockerfile: ./Dockerfile.prod
    environment:
      - NODE_ENV=github
    depends_on:
      - "mongo"
    ports:
      - 5000:80
    
  session:
    build:
      context: session/
      dockerfile: ./Dockerfile.prod
    environment:
      - NODE_ENV=github
    depends_on:
      - "mongo"
      - "website"
    ports:
      - 5001:80
    volumes:
      - screenshot:/app/screenshot
      - video:/app/public/video
    restart: always

  model:
    build:
      context: model/
      dockerfile: ./Dockerfile.prod
    environment:
      - NODE_ENV=github
    depends_on:
      - "mongo"
      - "session"
    ports:
      - 5002:80
    restart: always

  account:
    build:
      context: account/
      dockerfile: ./Dockerfile.prod
    environment:
      - NODE_ENV=github
      - TOKEN_SECRET=verysecret
    depends_on:
      - "mongo"
    ports:
      - 5004:80
    restart: always

  evaluator:
    build:
      context: evaluator/
      dockerfile: ./Dockerfile.prod
    environment:
      - NODE_ENV=github
    depends_on:
      - "mongo"
      - "session"
    restart: always

  dashboard:
    build:
      context: dashboard/
      dockerfile: ./Dockerfile.prod
    environment:
      - NODE_ENV=github
      - PROTOCOL=http
      - HOST_ADDR=reverseproxy
      - PLUGIN_INFO=
      - TOKEN_SECRET=verysecret
    volumes:
      - screenshot:/app/public/screenshot
      - video:/app/public/video

  api:
    build:
      context: api/
      dockerfile: ./Dockerfile.prod
    environment:
      - NODE_ENV=github
      - TOKEN_SECRET=verysecret
    depends_on:
      - "account"
      - "website"
      - "session"
      - "model"
    restart: always

  test:
    build:
      context: test/
      dockerfile: ./Dockerfile.github
    depends_on:
      - "website"
      - "account"

  rabbitmq:
    image: rabbitmq:3.8.5
    restart: always

  mongo:
    container_name: mongo
    image: mongo
    restart: always
    ports:
      - 27017:27017
    volumes:
      - db-data:/data/db

volumes:
    screenshot:
    video:
    db-data:
